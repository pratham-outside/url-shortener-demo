services:
  postgresc:
    image: 'postgres'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U pratham -d url_shortener']
      interval: 6s
      retries: 5
    restart: always
    networks:
      - app-network
    volumes:
      - database_volume:/var/lib/postgresql/data
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   env_file:
  #     - .env
  #   depends_on:
  #     postgresc:
  #       condition: service_healthy
  #   environment:
  #     HOST: postgresc
  #     PORT: 5432
  #     USER: ${POSTGRES_USER}
  #     PASSWORD: ${POSTGRES_PASSWORD}
  #     NAME: ${POSTGRES_DB}
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - app-network

  # sonarqube:
  #   image: 'sonarqube:latest'
  #   depends_on:
  #     postgresc:
  #       condition: 'service_healthy'
  #   environment:
  #     - SONAR_JDBC_URL=${SONAR_JDBC_URL}
  #     - SONAR_JDBC_USERNAME=${POSTGRES_USER}
  #     - SONAR_JDBC_PASSWORD=${POSTGRES_PASSWORD}
  #   networks:
  #     - app-network
  #   volumes:
  #     - sonarqube_data:/opt/sonarqube/data
  #     - sonarqube_extensions:/opt/sonarqube/extensions
  #     - sonarqube_logs:/opt/sonarqube/logs
  #   ports:
  #     - '9000:9000'
volumes:
  database_volume:
  # sonarqube_data:
  # sonarqube_extensions:
  # sonarqube_logs:

networks:
  app-network:
    driver: bridge
